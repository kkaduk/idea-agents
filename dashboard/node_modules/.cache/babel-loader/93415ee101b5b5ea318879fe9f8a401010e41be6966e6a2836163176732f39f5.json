{"ast":null,"code":"var _jsxFileName = \"/Users/KKADUK/Project/idea-agents/dashboard/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useRef } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AGENTS = [{\n  id: \"human-agent\",\n  display: \"Human Agent\",\n  color: \"#ffc800\"\n}, {\n  id: \"idea-creator-agent\",\n  display: \"Creator Agent\",\n  color: \"#73f7dd\"\n}, {\n  id: \"idea-critic-agent\",\n  display: \"Critic Agent\",\n  color: \"#f35b53\"\n}, {\n  id: \"idea-finalizer-agent\",\n  display: \"Finalizer Agent\",\n  color: \"#d473f7\"\n}, {\n  id: \"risk-estimator-agent\",\n  display: \"Risk Estimator\",\n  color: \"#6fa8dc\"\n}];\nconst LOG_POLL_INTERVAL = 3000; // ms\n\nfunction App() {\n  _s();\n  const [idea, setIdea] = useState(\"\");\n  const [orchestrateStatus, setOrchestrateStatus] = useState(\"\");\n  const [logs, setLogs] = useState({});\n  const [loadingLogs, setLoadingLogs] = useState(false);\n  const logRefs = useRef({});\n  useEffect(() => {\n    fetchAllLogs();\n    const interval = setInterval(fetchAllLogs, LOG_POLL_INTERVAL);\n    return () => clearInterval(interval);\n    // eslint-disable-next-line\n  }, []);\n  function fetchAllLogs() {\n    setLoadingLogs(true);\n    Promise.all(AGENTS.map(agent => fetch(`/api/logs/${agent.id}?lines=100`).then(res => res.text()))).then(results => {\n      const next = {};\n      AGENTS.forEach((agent, idx) => {\n        next[agent.id] = results[idx];\n      });\n      setLogs(next);\n      setLoadingLogs(false);\n      // Scroll to bottom of each log (after DOM update)\n      setTimeout(() => {\n        AGENTS.forEach(agent => {\n          if (logRefs.current[agent.id]) {\n            logRefs.current[agent.id].scrollTop = logRefs.current[agent.id].scrollHeight;\n          }\n        });\n      }, 100);\n    });\n  }\n  function handleOrchestrate(e) {\n    e.preventDefault();\n    setOrchestrateStatus(\"Starting...\");\n    fetch(\"/api/product-ideas/orchestrate\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"text/plain\"\n      },\n      body: idea.trim()\n    }).then(res => res.text()).then(msg => {\n      setOrchestrateStatus(`Response: ${msg}`);\n      fetchAllLogs();\n    }).catch(err => setOrchestrateStatus(\"Error: \" + err.message));\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard-root\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Idea Agents Diagnostic Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"idea-input-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleOrchestrate,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Describe your idea...\",\n          value: idea,\n          onChange: e => setIdea(e.target.value),\n          className: \"idea-input\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"orchestrate-btn\",\n          children: \"Orchestrate Product Development\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"orchestrate-status\",\n        children: orchestrateStatus\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Agent Logs\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"logs-wrapper\",\n      children: AGENTS.map(agent => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"log-panel\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"log-header\",\n          style: {\n            background: agent.color,\n            color: \"#222\",\n            fontWeight: 700\n          },\n          children: agent.display\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n          className: \"log-output\",\n          ref: el => logRefs.current[agent.id] = el,\n          style: {\n            background: \"#14172b\",\n            color: \"#eaeaea\",\n            borderLeft: `5px solid ${agent.color}`\n          },\n          children: logs[agent.id] || (loadingLogs ? \"Loading...\" : \"No log.\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 13\n        }, this)]\n      }, agent.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"kZXlwB6QkZuSOYUiy1JYnBhJOLQ=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","useRef","jsxDEV","_jsxDEV","AGENTS","id","display","color","LOG_POLL_INTERVAL","App","_s","idea","setIdea","orchestrateStatus","setOrchestrateStatus","logs","setLogs","loadingLogs","setLoadingLogs","logRefs","fetchAllLogs","interval","setInterval","clearInterval","Promise","all","map","agent","fetch","then","res","text","results","next","forEach","idx","setTimeout","current","scrollTop","scrollHeight","handleOrchestrate","e","preventDefault","method","headers","body","trim","msg","catch","err","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","value","onChange","target","required","style","background","fontWeight","ref","el","borderLeft","_c","$RefreshReg$"],"sources":["/Users/KKADUK/Project/idea-agents/dashboard/src/App.js"],"sourcesContent":["import React, { useEffect, useState, useRef } from \"react\";\n\nconst AGENTS = [\n  { id: \"human-agent\", display: \"Human Agent\", color: \"#ffc800\" },\n  { id: \"idea-creator-agent\", display: \"Creator Agent\", color: \"#73f7dd\" },\n  { id: \"idea-critic-agent\", display: \"Critic Agent\", color: \"#f35b53\" },\n  { id: \"idea-finalizer-agent\", display: \"Finalizer Agent\", color: \"#d473f7\" },\n  { id: \"risk-estimator-agent\", display: \"Risk Estimator\", color: \"#6fa8dc\" },\n];\n\nconst LOG_POLL_INTERVAL = 3000; // ms\n\nfunction App() {\n  const [idea, setIdea] = useState(\"\");\n  const [orchestrateStatus, setOrchestrateStatus] = useState(\"\");\n  const [logs, setLogs] = useState({});\n  const [loadingLogs, setLoadingLogs] = useState(false);\n  const logRefs = useRef({});\n\n  useEffect(() => {\n    fetchAllLogs();\n    const interval = setInterval(fetchAllLogs, LOG_POLL_INTERVAL);\n    return () => clearInterval(interval);\n    // eslint-disable-next-line\n  }, []);\n\n  function fetchAllLogs() {\n    setLoadingLogs(true);\n    Promise.all(\n      AGENTS.map((agent) =>\n        fetch(`/api/logs/${agent.id}?lines=100`).then((res) => res.text())\n      )\n    ).then((results) => {\n      const next = {};\n      AGENTS.forEach((agent, idx) => {\n        next[agent.id] = results[idx];\n      });\n      setLogs(next);\n      setLoadingLogs(false);\n      // Scroll to bottom of each log (after DOM update)\n      setTimeout(() => {\n        AGENTS.forEach((agent) => {\n          if (logRefs.current[agent.id]) {\n            logRefs.current[agent.id].scrollTop = logRefs.current[agent.id].scrollHeight;\n          }\n        });\n      }, 100);\n    });\n  }\n\n  function handleOrchestrate(e) {\n    e.preventDefault();\n    setOrchestrateStatus(\"Starting...\");\n    fetch(\"/api/product-ideas/orchestrate\", {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"text/plain\" },\n      body: idea.trim(),\n    })\n      .then((res) => res.text())\n      .then((msg) => {\n        setOrchestrateStatus(`Response: ${msg}`);\n        fetchAllLogs();\n      })\n      .catch((err) => setOrchestrateStatus(\"Error: \" + err.message));\n  }\n\n  return (\n    <div className=\"dashboard-root\">\n      <h1>Idea Agents Diagnostic Dashboard</h1>\n      <section className=\"idea-input-section\">\n        <form onSubmit={handleOrchestrate}>\n          <input\n            type=\"text\"\n            placeholder=\"Describe your idea...\"\n            value={idea}\n            onChange={(e) => setIdea(e.target.value)}\n            className=\"idea-input\"\n            required\n          />\n          <button type=\"submit\" className=\"orchestrate-btn\">\n            Orchestrate Product Development\n          </button>\n        </form>\n        <div className=\"orchestrate-status\">{orchestrateStatus}</div>\n      </section>\n      <h2>Agent Logs</h2>\n      <div className=\"logs-wrapper\">\n        {AGENTS.map((agent) => (\n          <div className=\"log-panel\" key={agent.id}>\n            <div\n              className=\"log-header\"\n              style={{ background: agent.color, color: \"#222\", fontWeight: 700 }}\n            >\n              {agent.display}\n            </div>\n            <pre\n              className=\"log-output\"\n              ref={(el) => (logRefs.current[agent.id] = el)}\n              style={{\n                background: \"#14172b\",\n                color: \"#eaeaea\",\n                borderLeft: `5px solid ${agent.color}`,\n              }}\n            >\n              {logs[agent.id] || (loadingLogs ? \"Loading...\" : \"No log.\")}\n            </pre>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}